# Generated by Django 5.1.4 on 2025-04-16 12:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('technical', '__first__'),
        ('users', '0002_userphoto'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MootCourtStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Статус муткорта')),
            ],
            options={
                'verbose_name': 'Статус муткорта',
                'verbose_name_plural': 'Статусы муткортов',
            },
        ),
        migrations.CreateModel(
            name='MootCourtTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Тег')),
            ],
            options={
                'verbose_name': 'Тег муткорта',
                'verbose_name_plural': 'Теги муткортов',
            },
        ),
        migrations.CreateModel(
            name='MootCourtType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Тип муткорта')),
            ],
            options={
                'verbose_name': 'Тип муткорта',
                'verbose_name_plural': 'Типы муткортов',
            },
        ),
        migrations.CreateModel(
            name='ObjectStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Статус объекта')),
            ],
            options={
                'verbose_name': 'Статус объекта',
                'verbose_name_plural': 'Статусы объектов',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Дата и время начала')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время окончания')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('files', models.ManyToManyField(blank=True, related_name='events', to='technical.document', verbose_name='Файлы')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
            },
        ),
        migrations.CreateModel(
            name='MootCourt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('announcement', models.TextField(verbose_name='Анонс')),
                ('require_telegram', models.BooleanField(default=False, verbose_name='Необходимость Telegram-канала')),
                ('telegram_channel', models.CharField(blank=True, max_length=255, null=True)),
                ('background', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='mootcourt_images/')),
                ('arbitrators', models.ManyToManyField(blank=True, related_name='arbitrator_mootcourts', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(related_name='mootcourts', to='technical.document')),
                ('events', models.ManyToManyField(related_name='mootcourts', to='events.event')),
                ('messages', models.ManyToManyField(blank=True, related_name='mootcourts', to='technical.message')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_mootcourts', to=settings.AUTH_USER_MODEL)),
                ('premoot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pre_moots', to='events.mootcourt')),
                ('senior_arbitrators', models.ManyToManyField(blank=True, related_name='senior_arbitrator_mootcourts', to=settings.AUTH_USER_MODEL)),
                ('teams', models.ManyToManyField(blank=True, related_name='mootcourts', to='users.team')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mootcourts', to='events.mootcourtstatus')),
                ('tags', models.ManyToManyField(blank=True, related_name='mootcourts', to='events.mootcourttag')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mootcourts', to='events.mootcourttype')),
                ('object_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mootcourts', to='events.objectstatus')),
            ],
            options={
                'verbose_name': 'Муткорт',
                'verbose_name_plural': 'Муткорты',
            },
        ),
    ]
